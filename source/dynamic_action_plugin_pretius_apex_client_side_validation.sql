prompt --application/set_environment
set define off verify off feedback off
whenever sqlerror exit sql.sqlcode rollback
--------------------------------------------------------------------------------
--
-- ORACLE Application Express (APEX) export file
--
-- You should run the script connected to SQL*Plus as the Oracle user
-- APEX_180200 or as the owner (parsing schema) of the application.
--
-- NOTE: Calls to apex_application_install override the defaults below.
--
--------------------------------------------------------------------------------
begin
wwv_flow_api.import_begin (
 p_version_yyyy_mm_dd=>'2016.08.24'
,p_release=>'5.1.3.00.05'
,p_default_workspace_id=>21717127411908241868
,p_default_application_id=>103428
,p_default_owner=>'RD_DEV'
);
end;
/
prompt --application/shared_components/plugins/dynamic_action/com_ais_live_validation
begin
wwv_flow_api.create_plugin(
 p_id=>wwv_flow_api.id(8359693052210337079)
,p_plugin_type=>'DYNAMIC ACTION'
,p_name=>'LIVE.VALIDATION'
,p_display_name=>'APEX Item Live Validation'
,p_category=>'EXECUTE'
,p_supported_ui_types=>'DESKTOP:JQM_SMARTPHONE'
,p_plsql_code=>wwv_flow_string.join(wwv_flow_t_varchar2(
'e_validation_failed EXCEPTION;',
'type T_TAB ',
'IS ',
'  TABLE OF VARCHAR2(4000) INDEX BY BINARY_INTEGER; ',
'  /* render */',
'  FUNCTION RENDER_VALIDATION ( P_DYNAMIC_ACTION IN APEX_PLUGIN.T_DYNAMIC_ACTION,',
'                            P_PLUGIN          IN APEX_PLUGIN.T_PLUGIN ) ',
'  RETURN APEX_PLUGIN.T_DYNAMIC_ACTION_RENDER_RESULT ',
'IS ',
'  V_RESULT APEX_PLUGIN.T_DYNAMIC_ACTION_RENDER_RESULT; ',
'BEGIN ',
'  APEX_JAVASCRIPT.ADD_LIBRARY( P_NAME => ''live_validation.min'', ',
'                              P_DIRECTORY => P_PLUGIN.FILE_PREFIX, ',
'                              P_VERSION => NULL ); ',
'  V_RESULT.AJAX_IDENTIFIER := APEX_PLUGIN.GET_AJAX_IDENTIFIER(); ',
'  V_RESULT.JAVASCRIPT_FUNCTION := ''function() { live_validation(this);}''; ',
'  APEX_PLUGIN_UTIL.DEBUG_DYNAMIC_ACTION ( P_PLUGIN => P_PLUGIN, ',
'                                         P_DYNAMIC_ACTION => P_DYNAMIC_ACTION ); ',
'  RETURN V_RESULT; ',
'EXCEPTION ',
'WHEN OTHERS THEN ',
'  HTP.P( SQLERRM ); ',
'  RETURN V_RESULT; ',
'END RENDER_VALIDATION; ',
'/* get item value */',
'FUNCTION GET_VALUE ( P_NAME IN VARCHAR2 ) ',
'  RETURN VARCHAR2 ',
'IS ',
'  V_VALUE VARCHAR2(32767); ',
'BEGIN ',
'  V_VALUE := V(P_NAME); ',
'  RETURN ',
'  CASE ',
'  WHEN V_VALUE = ''%null%'' THEN ',
'    NULL ',
'  ELSE ',
'    V_VALUE ',
'  END; ',
'END GET_VALUE; ',
'/* get current time */',
'FUNCTION CURRENT_TIME_MS ',
'  RETURN NUMBER ',
'IS ',
'  OUT_RESULT NUMBER; ',
'BEGIN ',
'  SELECT EXTRACT(DAY FROM(SYSTIMESTAMP - TO_TIMESTAMP(''1970-01-01'', ''YYYY-MM-DD''))) * 86400000 + TO_NUMBER(TO_CHAR(SYS_EXTRACT_UTC(SYSTIMESTAMP), ''SSSSSFF3'')) ',
'  INTO   OUT_RESULT ',
'  FROM   DUAL; ',
'   ',
'  RETURN OUT_RESULT; ',
'END CURRENT_TIME_MS; ',
'/* to perform bindings */',
'FUNCTION PERFORM_BINDS (',
'    P_STRING   IN         VARCHAR2,',
'    P_ESCAPE   IN         BOOLEAN DEFAULT FALSE',
') RETURN VARCHAR2 IS',
'',
'    VR_STR         VARCHAR2(32767) := P_STRING;',
'    VR_BINDS       SYS.DBMS_SQL.VARCHAR2_TABLE;',
'    VR_BINDS_TMP   APEX_T_VARCHAR2;',
'    VR_SBINDS      APEX_T_VARCHAR2;',
'BEGIN',
'    VR_BINDS   := WWV_FLOW_UTILITIES.GET_BINDS(VR_STR);',
'    FOR I IN 1..VR_BINDS.COUNT LOOP',
'        APEX_STRING.PUSH(',
'            VR_BINDS_TMP,',
'            VR_BINDS(I)',
'        );',
'    END LOOP;',
'',
'    SELECT',
'        COLUMN_VALUE',
'    BULK COLLECT',
'    INTO VR_SBINDS',
'    FROM',
'        TABLE ( VR_BINDS_TMP )',
'    ORDER BY',
'        LENGTH(COLUMN_VALUE) DESC;',
'',
'    IF VR_SBINDS.COUNT > 0 THEN',
'        FOR I IN 1..VR_SBINDS.COUNT LOOP',
'          VR_STR := REPLACE( VR_STR, VR_SBINDS(I), '' V('''''' ',
'          || LTRIM(VR_SBINDS(I),'':'') ',
'          || '''''') '' ); ',
'        END LOOP;',
'    END IF;',
'',
'    VR_STR     := APEX_PLUGIN_UTIL.REPLACE_SUBSTITUTIONS(',
'        P_VALUE    => VR_STR,',
'        P_ESCAPE   => TRUE',
'    );',
'    APEX_DEBUG.INFO(VR_STR);',
'    RETURN VR_STR;',
'END PERFORM_BINDS;',
'/* get results */',
'FUNCTION GET_FUNC_BOOLEAN_RESULT( P_CODE IN VARCHAR2 ) ',
'  RETURN BOOLEAN ',
'IS ',
'  V_FUNC_BLOCK VARCHAR2(32000); ',
'  V_RESULT     VARCHAR2(1); ',
'  V_CODE       VARCHAR2(32000); ',
'BEGIN ',
'  V_CODE := PERFORM_BINDS( P_CODE, TRUE ); ',
'  V_CODE := REPLACE(V_CODE, ''declare'', ''DECLARE''); ',
'  V_CODE := REPLACE(V_CODE, ''begin'', ''BEGIN''); ',
'  IF INSTR(V_CODE, ''DECLARE'') > 0 THEN ',
'    V_CODE := REPLACE(V_CODE, ''DECLARE'', ''function test return boolean is''); ',
'  ELSIF INSTR(V_CODE, ''BEGIN'') > 0 THEN ',
'    V_CODE := REPLACE(V_CODE, ''BEGIN'', ''function test return boolean is begin''); ',
'  ELSE ',
'    V_CODE := ''function test return boolean is begin '' ',
'    ||V_CODE ',
'    ||'' end;''; ',
'  END IF; ',
'  V_FUNC_BLOCK := ''     declare       v_result boolean;       '' ',
'  ||V_CODE ',
'  ||''     begin       v_result := test();       if v_result then         :out := 1;       else         :out := 0;       end if;     end;   ''; ',
'  EXECUTE IMMEDIATE V_FUNC_BLOCK USING OUT V_RESULT; ',
'  IF V_RESULT = 1 THEN ',
'    RETURN TRUE; ',
'  ELSE ',
'    RETURN FALSE; ',
'  END IF; ',
'END GET_FUNC_BOOLEAN_RESULT; ',
'/* function to get pl/sql expression result */',
'FUNCTION GET_PLSQL_EXPRESSION_RESULT( P_EXPRESSION IN VARCHAR2 )',
'  RETURN BOOLEAN ',
'IS ',
'  V_EXPRESSION VARCHAR2(32000); ',
'  V_FUNC_BLOCK VARCHAR2(32000); ',
'  V_RESULT     VARCHAR2(1); ',
'BEGIN ',
'  V_EXPRESSION := PERFORM_BINDS( P_EXPRESSION, TRUE ); ',
'  V_FUNC_BLOCK := ''     begin       if '' ',
'  ||V_EXPRESSION ',
'  ||'' then         return 1;       else        return 0;       end if;     end;   ''; ',
'  V_RESULT := APEX_PLUGIN_UTIL.GET_PLSQL_FUNCTION_RESULT( V_FUNC_BLOCK ); ',
'  IF V_RESULT = ''1'' THEN ',
'    RETURN TRUE; ',
'  ELSE ',
'    RETURN FALSE; ',
'  END IF; ',
'END GET_PLSQL_EXPRESSION_RESULT; ',
'/* function to get item mask */',
'FUNCTION GETITEMFORMATMASK( P_ITEM_ID IN VARCHAR2 ) ',
'  RETURN VARCHAR2 ',
'IS ',
'  V_FORMAT_MASK VARCHAR2(200); ',
'BEGIN ',
'  SELECT FORMAT_MASK ',
'  INTO   V_FORMAT_MASK ',
'  FROM   APEX_APPLICATION_PAGE_ITEMS ',
'  WHERE  APPLICATION_ID = :APP_TRANSLATION_ID ',
'  AND    PAGE_ID = :APP_TRANSLATION_PAGE_ID ',
'  AND    ITEM_NAME = P_ITEM_ID; ',
'   ',
'  RETURN V_FORMAT_MASK; ',
'EXCEPTION ',
'WHEN OTHERS THEN ',
'  RETURN NULL; ',
'END GETITEMFORMATMASK; ',
'/* function to select count from query */',
'FUNCTION SELECTCOUNTFROMQUERY( P_QUERY IN VARCHAR2 ) ',
'  RETURN NUMBER ',
'IS ',
'  V_QUERY VARCHAR2(32000); ',
'  V_COUNT NUMBER :=0; ',
'BEGIN ',
'  V_QUERY := PERFORM_BINDS( P_QUERY, TRUE ); ',
'  V_QUERY := ''select count(1) from ('' ',
'  || V_QUERY ',
'  ||'')''; ',
'  EXECUTE IMMEDIATE V_QUERY INTO V_COUNT; ',
'  RETURN V_COUNT; ',
'EXCEPTION ',
'WHEN OTHERS THEN ',
'  APEX_DEBUG.ERROR (V_QUERY); ',
'  RAISE; ',
'END SELECTCOUNTFROMQUERY; ',
'/* function to trim whitespace */',
'FUNCTION RTRIM_WS( P_VAL IN VARCHAR2 ) ',
'  RETURN VARCHAR2 AS ',
'  BEGIN ',
'    RETURN RTRIM(REPLACE(REPLACE(P_VAL,CHR(13),NULL),CHR(10),NULL)); ',
'  END RTRIM_WS; ',
'  /* procedure to check matching */',
'  PROCEDURE ISRUNCONDITIONMATCHED( P_CONDITION_TYPE_CODE  IN VARCHAR2,',
'                                P_CONDITION_EXPRESSION1 IN VARCHAR2, ',
'                                P_CONDITION_EXPRESSION2 IN VARCHAR2, ',
'                                P_OUT_RUN OUT NUMBER, ',
'                                P_OUT_MSG OUT VARCHAR2 ) ',
'IS ',
'  V_COND_TYPE           VARCHAR2(100) := P_CONDITION_TYPE_CODE; ',
'  V_COND_1              VARCHAR2(32767) := WWV_FLOW.DO_SUBSTITUTIONS(P_CONDITION_EXPRESSION1); ',
'  V_COND_2              VARCHAR2(32767) := WWV_FLOW.DO_SUBSTITUTIONS(P_CONDITION_EXPRESSION2); ',
'  E_STOP_PROCESSING     EXCEPTION; ',
'  E_RETURN_TRUE         EXCEPTION; ',
'  E_RETURN_FALSE        EXCEPTION; ',
'  E_UNKOWN_CONDITION    EXCEPTION; ',
'  E_RETURN_NO_CONDITION EXCEPTION; ',
'  V_TEST_BOOLEAN        BOOLEAN; ',
'  V_TEST_RESULT         VARCHAR2(3200); ',
'  V_TEST_NUMBER         NUMBER; ',
'  L_VAL                 VARCHAR2(4000); ',
'  L_LEN                 NUMBER; ',
'BEGIN ',
'  IF P_CONDITION_TYPE_CODE IS NULL THEN ',
'    RAISE E_RETURN_NO_CONDITION; ',
'  END IF; ',
'  IF V_COND_TYPE = ''NEVER'' THEN ',
'    RAISE E_RETURN_FALSE; ',
'  ELSIF V_COND_TYPE = ''ALWAYS'' THEN ',
'    RAISE E_RETURN_TRUE; ',
'  ELSIF V_COND_TYPE IN (''SQL_EXPRESION'', ',
'                        ''SQL_EXPRESSION'') THEN ',
'    V_TEST_RESULT := ''select 1 from dual where '' ',
'    ||PERFORM_BINDS( V_COND_1 ); ',
'    IF SELECTCOUNTFROMQUERY( V_TEST_RESULT ) = 0 THEN ',
'      RAISE E_RETURN_FALSE; ',
'    END IF; ',
'  ELSIF V_COND_TYPE = ''FUNCTION_BODY'' THEN ',
'    V_TEST_BOOLEAN := GET_FUNC_BOOLEAN_RESULT( V_COND_1 ); ',
'    IF NOT V_TEST_BOOLEAN THEN ',
'      RAISE E_RETURN_FALSE; ',
'    END IF; ',
'  ELSIF V_COND_TYPE = ''ITEM_IS_NOT_NULL'' THEN ',
'    IF GET_VALUE( V_COND_1 ) IS NULL THEN ',
'      RAISE E_RETURN_FALSE; ',
'    END IF; ',
'  ELSIF V_COND_TYPE =''EXISTS'' THEN ',
'    IF SELECTCOUNTFROMQUERY( V_COND_1 ) <= 0 THEN ',
'      RAISE E_RETURN_FALSE; ',
'    END IF; ',
'  ELSIF V_COND_TYPE =''NOT_EXISTS'' THEN ',
'    IF SELECTCOUNTFROMQUERY( V_COND_1 ) > 0 THEN ',
'      RAISE E_RETURN_FALSE; ',
'    END IF; ',
'  ELSIF V_COND_TYPE =''VAL_OF_ITEM_IN_COND_EQ_COND2'' THEN ',
'    IF GET_VALUE( V_COND_1 ) <> V_COND_2 ',
'      OR ',
'      GET_VALUE( V_COND_1 ) IS NULL THEN ',
'      RAISE E_RETURN_FALSE; ',
'    END IF; ',
'  ELSIF V_COND_TYPE IN (''PLSQL_EXPRESSION'', ',
'                        ''PLSQL_EXPRESION'') THEN ',
'    IF NOT GET_PLSQL_EXPRESSION_RESULT( V_COND_1 ) THEN ',
'      RAISE E_RETURN_FALSE; ',
'    END IF; ',
'  ELSIF V_COND_TYPE IN (''ITEM_IS_NOT_ZERO'', ',
'                        ''ITEM_NOT_ZERO'') THEN ',
'    IF NVL( V( RTRIM_WS(V_COND_1) ),''x'' ) = ''0'' THEN ',
'      RAISE E_RETURN_FALSE; ',
'    END IF; ',
'  ELSIF V_COND_TYPE = ''ITEM_CONTAINS_NO_SPACES'' THEN ',
'    IF INSTR(REPLACE(V(WWV_FLOW.DO_SUBSTITUTIONS(RTRIM_WS(V_COND_1),''TEXT'')),''%null%'',NULL),'' '') > 0 THEN',
'      RAISE E_RETURN_FALSE; ',
'    END IF; ',
'  ELSIF V_COND_TYPE IN (''ITEM_NOT_NULL_OR_ZERO'', ',
'                        ''ITEM_IS_NOT_NULL_OR_ZERO'', ',
'                        ''FLOW_ITEM_IS_NOT_NULL_OR_ZERO'') THEN ',
'    IF V(RTRIM_WS(V_COND_1)) IS NULL ',
'      OR ',
'      V(RTRIM_WS(V_COND_1)) = ''0'' THEN ',
'      RAISE E_RETURN_FALSE; ',
'    END IF; ',
'  ELSIF V_COND_TYPE = ''ITEM_IS_ALPHANUMERIC'' THEN ',
'    L_LEN := NVL(LENGTH(REPLACE(V(WWV_FLOW.DO_SUBSTITUTIONS(UPPER(RTRIM_WS(V_COND_1)),''TEXT'')),''%null%'',NULL)),0);',
'    L_VAL := REPLACE(V(UPPER(V_COND_1)),''%null%'',NULL); ',
'    FOR J IN 1..L_LEN ',
'    LOOP ',
'      IF INSTR(''abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890_'',SUBSTR(L_VAL,J,1)) = 0 THEN',
'        RAISE E_RETURN_FALSE; ',
'      END IF; ',
'    END LOOP; ',
'  ELSIF V_COND_TYPE = ''ITEM_IS_NUMERIC'' THEN ',
'    BEGIN ',
'      V_TEST_NUMBER := REPLACE(V(WWV_FLOW.DO_SUBSTITUTIONS(RTRIM_WS(V_COND_1),''TEXT'')),''%null%'',NULL);',
'    EXCEPTION ',
'    WHEN OTHERS THEN ',
'      RAISE E_RETURN_FALSE; ',
'    END; ',
'  ELSIF V_COND_TYPE = ''ITEM_IS_NOT_NUMERIC'' THEN ',
'    BEGIN ',
'      V_TEST_NUMBER := REPLACE(V(WWV_FLOW.DO_SUBSTITUTIONS(RTRIM_WS( V_COND_1 ),''TEXT'')),''%null%'',NULL);',
'      RAISE E_RETURN_FALSE; ',
'    EXCEPTION ',
'    WHEN OTHERS THEN ',
'      NULL; ',
'    END; ',
'  ELSIF V_COND_TYPE IN (''VAL_OF_ITEM_IN_COND_NOT_EQ_COND2'', ',
'                        ''VAL_OF_ITEM_IN_COND_NOT_EQ_COND_TEXT'', ',
'                        ''VALUE_OF_ITEM_NAMED_IN_COND1_NOT_EQUAL_TEXT_IN_COND2'') THEN ',
'    IF NVL(V(RTRIM_WS( V_COND_1 )),''Mjhakb'') = NVL(WWV_FLOW.DO_SUBSTITUTIONS( V_COND_1 ),''mjHbka'') THEN',
'      RAISE E_RETURN_FALSE; ',
'    END IF; ',
'  ELSIF V_COND_TYPE IN (''ITEM_IS_NULL'', ',
'                        ''FLOW_ITEM_IS_NULL'') THEN ',
'    IF REPLACE(V(RTRIM_WS( V_COND_1 )),''%null%'',NULL) IS NULL THEN ',
'      NULL; ',
'    ELSE ',
'      RAISE E_RETURN_FALSE; ',
'    END IF; ',
'  ELSIF V_COND_TYPE IN (''ITEM_IS_NULL_OR_ZERO'') THEN ',
'    IF V(RTRIM_WS( V_COND_1 )) IS NULL ',
'      OR ',
'      V(RTRIM_WS( V_COND_1 )) = ''0'' THEN ',
'      NULL; ',
'    ELSE ',
'      RAISE E_RETURN_FALSE; ',
'    END IF; ',
'  ELSIF V_COND_TYPE IN (''ITEM_IS_ZERO'') THEN ',
'    IF NVL(V(RTRIM_WS( V_COND_1 )),''x'') <> ''0'' THEN ',
'      RAISE E_RETURN_FALSE; ',
'    END IF; ',
'  ELSIF V_COND_TYPE = ''VALUE_OF_ITEM_IN_CONDITION_IN_COLON_DELIMITED_LIST'' THEN ',
'    IF INSTR('':'' ',
'      ||WWV_FLOW.DO_SUBSTITUTIONS(V_COND_2,''TEXT'') ',
'      ||'':'','':'' ',
'      ||V(RTRIM_WS( V_COND_1 )) ',
'      ||'':'') > 0 THEN ',
'      NULL; ',
'    ELSE ',
'      RAISE E_RETURN_FALSE; ',
'    END IF; ',
'  ELSIF V_COND_TYPE = ''VALUE_OF_ITEM_IN_CONDITION_NOT_IN_COLON_DELIMITED_LIST'' THEN ',
'    IF INSTR('':'' ',
'      ||WWV_FLOW.DO_SUBSTITUTIONS( V_COND_2,''TEXT'') ',
'      ||'':'','':'' ',
'      ||V(RTRIM_WS( V_COND_1 )) ',
'      ||'':'') > 0 THEN ',
'      RAISE E_RETURN_FALSE; ',
'    ELSE ',
'      NULL; ',
'    END IF; ',
'  ELSE ',
'    RAISE E_UNKOWN_CONDITION; ',
'  END IF; ',
'  RAISE E_RETURN_TRUE; ',
'EXCEPTION ',
'WHEN E_RETURN_NO_CONDITION THEN ',
'  P_OUT_RUN := 1; ',
'  P_OUT_MSG := ''No condition for validation''; ',
'WHEN E_RETURN_TRUE THEN ',
'  P_OUT_RUN := 1; ',
'  P_OUT_MSG := ''Condition ['' ',
'  ||V_COND_TYPE ',
'  ||''] passed.''; ',
'WHEN E_RETURN_FALSE THEN ',
'  P_OUT_RUN := 0; ',
'  P_OUT_MSG := ''Condition ['' ',
'  ||V_COND_TYPE ',
'  ||''] not passed. Validation is not executed.''; ',
'WHEN E_UNKOWN_CONDITION THEN ',
'  P_OUT_RUN := 2; ',
'  P_OUT_MSG := ''Condition type ['' ',
'  || V_COND_TYPE ',
'  || ''] not suppoerted. Sorry''; ',
'WHEN OTHERS THEN ',
'  P_OUT_RUN := 2; ',
'  P_OUT_MSG := ''Unexpected error: '' ',
'  ||SQLERRM; ',
'END ISRUNCONDITIONMATCHED; ',
'/* validate */',
'PROCEDURE VALIDATE( P_VALIDATION_TYPE       IN VARCHAR2, ',
'                   P_VALIDATION_NAME        IN VARCHAR2, ',
'                   P_VALIDATION_EXPRESSION1 IN VARCHAR2, ',
'                   P_VALIDATION_EXPRESSION2 IN VARCHAR2, ',
'                   P_VALIDATION_ERROR_TEXT  IN VARCHAR2, ',
'                   P_OUT_ERROR_TEXT OUT VARCHAR2, ',
'                   P_OUT_STATUS OUT NUMBER, ',
'                   P_OUT_MSG OUT VARCHAR2 ) ',
'IS ',
'  L_EXPRESSION1        VARCHAR2(32767) := WWV_FLOW.DO_SUBSTITUTIONS(P_VALIDATION_EXPRESSION1); ',
'  L_EXPRESSION2        VARCHAR2(32767) := WWV_FLOW.DO_SUBSTITUTIONS(P_VALIDATION_EXPRESSION2); ',
'  L_VALUE              VARCHAR2(32767); ',
'  L_LEN                NUMBER; ',
'  L_BOOLEAN            BOOLEAN; ',
'  V_VAL_TYPE           VARCHAR2(3200) := P_VALIDATION_TYPE; ',
'  V_VAL_NAME           VARCHAR2(3200) := P_VALIDATION_NAME; ',
'  E_RETURN_TRUE        EXCEPTION; ',
'  E_RETURN_FALSE       EXCEPTION; ',
'  E_UNKNOWN_VALIDATION EXCEPTION; ',
'  V_TEST_NUMBER        NUMBER; ',
'  V_TEST_DATE          DATE; ',
'  V_TEST_RESULT        VARCHAR2(3200); ',
'BEGIN ',
'  P_OUT_ERROR_TEXT := P_VALIDATION_ERROR_TEXT; ',
'  IF P_VALIDATION_TYPE = ''NATIVE_NUMBER_FIELD'' THEN ',
'    P_OUT_ERROR_TEXT := REPLACE(APEX_LANG.MESSAGE(''APEX.NUMBER_FIELD.VALUE_INVALID''), ''APEX.NUMBER_FIELD.VALUE_INVALID'', ''#LABEL# ''',
'    || APEX_LANG.MESSAGE(''MUST_BE_NUMERIC'')); ',
'  ELSIF P_VALIDATION_TYPE = ''ITEM_REQUIRED'' THEN ',
'    P_OUT_ERROR_TEXT := REPLACE(APEX_LANG.MESSAGE(''APEX.PAGE_ITEM_IS_REQUIRED'', L_EXPRESSION2), ''APEX.PAGE_ITEM_IS_REQUIRED'', ''#LABEL# ''',
'    || APEX_LANG.MESSAGE(''REQUIRED'')); ',
'  ELSIF P_VALIDATION_TYPE = ''NATIVE_DATE_PICKER'' THEN ',
'    P_OUT_ERROR_TEXT := REPLACE(APEX_LANG.MESSAGE(''APEX.DATEPICKER_VALUE_INVALID'', L_EXPRESSION2), ''APEX.DATEPICKER_VALUE_INVALID'', ''#LABEL# ''',
'    || APEX_LANG.MESSAGE(''DOES_NOT_MATCH_FORMAT'') ',
'    || '' '' ',
'    ||L_EXPRESSION2 ',
'    ||''.''); ',
'  END IF; ',
'  IF V_VAL_TYPE =''EXISTS'' THEN ',
'    IF SELECTCOUNTFROMQUERY( L_EXPRESSION1 ) <= 0 THEN ',
'      RAISE E_RETURN_FALSE; ',
'    END IF; ',
'  ELSIF V_VAL_TYPE =''NOT_EXISTS'' THEN ',
'    IF SELECTCOUNTFROMQUERY( L_EXPRESSION1 ) > 0 THEN ',
'      RAISE E_RETURN_FALSE; ',
'    END IF; ',
'  ELSIF V_VAL_TYPE =''ITEM_NOT_ZERO'' THEN ',
'    IF NOT NVL(GET_VALUE(L_EXPRESSION1),''x'') != ''0'' THEN ',
'      RAISE E_RETURN_FALSE; ',
'    END IF; ',
'  ELSIF V_VAL_TYPE IN (''ITEM_NOT_NULL'', ',
'                       ''ITEM_REQUIRED'') THEN ',
'    IF GET_VALUE(L_EXPRESSION1) IS NULL THEN ',
'      RAISE E_RETURN_FALSE; ',
'    END IF; ',
'  ELSIF V_VAL_TYPE =''ITEM_NOT_NULL_OR_ZERO'' THEN ',
'    L_VALUE := GET_VALUE(L_EXPRESSION1); ',
'    IF L_VALUE IS NULL ',
'      OR ',
'      L_VALUE = ''0'' THEN ',
'      RAISE E_RETURN_FALSE; ',
'    END IF; ',
'  ELSIF V_VAL_TYPE = ''ITEM_IS_ALPHANUMERIC'' THEN ',
'    L_VALUE := GET_VALUE(L_EXPRESSION1); ',
'    L_LEN := NVL(LENGTH(L_VALUE),0); ',
'    FOR J IN 1 .. L_LEN ',
'    LOOP ',
'      IF INSTR(''abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890_'',SUBSTR(L_VALUE,J,1)) = 0 THEN',
'        RAISE E_RETURN_FALSE; ',
'      END IF; ',
'    END LOOP; ',
'  ELSIF V_VAL_TYPE IN (''NATIVE_NUMBER_FIELD'', ',
'                       ''ITEM_IS_NUMERIC'') THEN ',
'    L_VALUE := GET_VALUE(L_EXPRESSION1); ',
'    BEGIN ',
'      V_TEST_NUMBER := TO_NUMBER( REPLACE(REPLACE(L_VALUE, '','', NULL), ''.'', NULL) ); ',
'    EXCEPTION ',
'    WHEN OTHERS THEN ',
'      RAISE E_RETURN_FALSE; ',
'    END; ',
'  ELSIF V_VAL_TYPE =''ITEM_CONTAINS_NO_SPACES'' THEN ',
'    IF INSTR(GET_VALUE(L_EXPRESSION1),'' '') > 0 THEN ',
'      RAISE E_RETURN_FALSE; ',
'    END IF; ',
'  ELSIF V_VAL_TYPE IN (''ITEM_IS_DATE'', ',
'                       ''NATIVE_DATE_PICKER'') THEN ',
'    L_VALUE := GET_VALUE(L_EXPRESSION1); ',
'    IF L_VALUE IS NOT NULL THEN ',
'      BEGIN ',
'        V_TEST_DATE := TO_DATE(L_VALUE, NVL(GETITEMFORMATMASK(L_EXPRESSION1),''DD-MON-RR'')); ',
'      EXCEPTION ',
'      WHEN OTHERS THEN ',
'        RAISE E_RETURN_FALSE; ',
'      END; ',
'    END IF; ',
'  ELSIF V_VAL_TYPE =''ITEM_IS_TIMESTAMP'' THEN ',
'    RAISE E_UNKNOWN_VALIDATION; ',
'  ELSIF V_VAL_TYPE IN (''SQL_EXPRESION'', ',
'                       ''SQL_EXPRESSION'') THEN ',
'    V_TEST_RESULT := ''select 1 from dual where '' ',
'    ||PERFORM_BINDS( L_EXPRESSION1, TRUE ); ',
'    IF SELECTCOUNTFROMQUERY( V_TEST_RESULT ) = 0 THEN ',
'      RAISE E_RETURN_FALSE; ',
'    END IF; ',
'  ELSIF V_VAL_TYPE IN (''PLSQL_EXPRESION'', ',
'                       ''PLSQL_EXPRESSION'') THEN ',
'    IF NOT GET_PLSQL_EXPRESSION_RESULT( L_EXPRESSION1 ) THEN ',
'      RAISE E_RETURN_FALSE; ',
'    END IF; ',
'  ELSIF V_VAL_TYPE =''PLSQL_ERROR'' THEN ',
'    RAISE E_RETURN_FALSE; ',
'  ELSIF V_VAL_TYPE =''FUNC_BODY_RETURNING_ERR_TEXT'' THEN ',
'    V_TEST_RESULT := APEX_PLUGIN_UTIL.GET_PLSQL_FUNCTION_RESULT( L_EXPRESSION1 ); ',
'    IF V_TEST_RESULT IS NOT NULL THEN ',
'      P_OUT_ERROR_TEXT := V_TEST_RESULT; ',
'      RAISE E_RETURN_FALSE; ',
'    END IF; ',
'  ELSIF V_VAL_TYPE =''FUNC_BODY_RETURNING_BOOLEAN'' THEN ',
'    L_BOOLEAN := GET_FUNC_BOOLEAN_RESULT( L_EXPRESSION1 ); ',
'    IF NOT L_BOOLEAN THEN ',
'      RAISE E_RETURN_FALSE; ',
'    END IF; ',
'  ELSIF V_VAL_TYPE =''REGULAR_EXPRESSION'' THEN ',
'    L_VALUE := GET_VALUE(L_EXPRESSION1); ',
'    IF NOT REGEXP_LIKE (L_VALUE, L_EXPRESSION2) THEN ',
'      RAISE E_RETURN_FALSE; ',
'    END IF; ',
'  ELSIF V_VAL_TYPE =''ITEM_IN_VALIDATION_IN_STRING2'' THEN ',
'    IF INSTR(L_EXPRESSION2, GET_VALUE(L_EXPRESSION1)) = 0 THEN ',
'      RAISE E_RETURN_FALSE; ',
'    END IF; ',
'  ELSIF V_VAL_TYPE =''ITEM_IN_VALIDATION_NOT_IN_STRING2'' THEN ',
'    IF INSTR(L_EXPRESSION2, GET_VALUE(L_EXPRESSION1)) > 0 THEN ',
'      RAISE E_RETURN_FALSE; ',
'    END IF; ',
'  ELSIF V_VAL_TYPE =''ITEM_IN_VALIDATION_EQ_STRING2'' THEN ',
'    L_VALUE := GET_VALUE(L_EXPRESSION1); ',
'    IF L_EXPRESSION2 = L_VALUE THEN ',
'      L_BOOLEAN := TRUE; ',
'    ELSE ',
'      L_BOOLEAN := FALSE; ',
'    END IF; ',
'    IF NOT L_BOOLEAN THEN ',
'      RAISE E_RETURN_FALSE; ',
'    END IF; ',
'  ELSIF V_VAL_TYPE =''ITEM_IN_VALIDATION_NOT_EQ_STRING2'' THEN ',
'    IF L_EXPRESSION2 = GET_VALUE(L_EXPRESSION1) THEN ',
'      RAISE E_RETURN_FALSE; ',
'    END IF; ',
'  ELSIF V_VAL_TYPE =''ITEM_IN_VALIDATION_CONTAINS_ONLY_CHAR_IN_STRING2'' THEN ',
'    L_VALUE := GET_VALUE(L_EXPRESSION1); ',
'    IF L_VALUE IS NULL THEN ',
'      L_BOOLEAN := TRUE; ',
'    ELSE ',
'      FOR I IN 1 .. LENGTH(L_VALUE) ',
'      LOOP ',
'        IF INSTR(L_EXPRESSION2, SUBSTR(L_VALUE, I, 1)) = 0 THEN ',
'          L_BOOLEAN := FALSE; ',
'          EXIT; ',
'        END IF; ',
'      END LOOP; ',
'    END IF; ',
'    IF NOT L_BOOLEAN THEN ',
'      RAISE E_RETURN_FALSE; ',
'    END IF; ',
'  ELSIF V_VAL_TYPE =''ITEM_IN_VALIDATION_CONTAINS_AT_LEAST_ONE_CHAR_IN_STRING2'' THEN ',
'    L_BOOLEAN := FALSE; ',
'    L_VALUE := GET_VALUE(L_EXPRESSION1); ',
'    IF L_VALUE IS NULL THEN ',
'      L_BOOLEAN := FALSE; ',
'    ELSE ',
'      FOR I IN 1..LENGTH(L_VALUE) ',
'      LOOP ',
'        IF INSTR(L_EXPRESSION2, SUBSTR(L_VALUE, I, 1)) > 0 THEN ',
'          L_BOOLEAN := TRUE; ',
'          EXIT; ',
'        END IF; ',
'      END LOOP; ',
'    END IF; ',
'    IF NOT L_BOOLEAN THEN ',
'      RAISE E_RETURN_FALSE; ',
'    END IF; ',
'  ELSIF V_VAL_TYPE =''ITEM_IN_VALIDATION_CONTAINS_NO_CHAR_IN_STRING2'' THEN ',
'    L_VALUE := GET_VALUE(L_EXPRESSION1); ',
'    IF L_VALUE IS NULL THEN ',
'      L_BOOLEAN := TRUE; ',
'    ELSE ',
'      FOR I IN 1..LENGTH(L_VALUE) ',
'      LOOP ',
'        IF INSTR(L_EXPRESSION2, SUBSTR(L_VALUE, I, 1)) > 0 THEN ',
'          L_BOOLEAN := FALSE; ',
'          EXIT; ',
'        END IF; ',
'      END LOOP; ',
'    END IF; ',
'    IF NOT L_BOOLEAN THEN ',
'      RAISE E_RETURN_FALSE; ',
'    END IF; ',
'  ELSE ',
'    RAISE E_UNKNOWN_VALIDATION; ',
'  END IF; ',
'  RAISE E_RETURN_TRUE; ',
'EXCEPTION ',
'WHEN E_RETURN_TRUE THEN ',
'  P_OUT_STATUS := 1; ',
'  P_OUT_MSG := ''Validation "'' ',
'  || V_VAL_NAME ',
'  ||''" ['' ',
'  || V_VAL_TYPE ',
'  ||''] passed''; ',
'WHEN E_RETURN_FALSE THEN ',
'  P_OUT_STATUS := 0; ',
'  P_OUT_MSG := ''Validation "'' ',
'  || V_VAL_NAME ',
'  ||''" ['' ',
'  || V_VAL_TYPE ',
'  ||''] failed''; ',
'WHEN E_UNKNOWN_VALIDATION THEN ',
'  P_OUT_STATUS := 2; ',
'  P_OUT_MSG := ''Validation type ['' ',
'  || V_VAL_TYPE ',
'  || ''] not suppoerted. Sorry''; ',
'WHEN OTHERS THEN ',
'  P_OUT_STATUS := 2; ',
'  P_OUT_ERROR_TEXT := ''Error occured while performin validation: '' ',
'  ||REPLACE(REPLACE(DBMS_UTILITY.FORMAT_ERROR_BACKTRACE, CHR(13), '' ''), CHR(10), '' ''); ',
'  P_OUT_MSG := ''Error occured while performin validation: '' ',
'  ||REPLACE(REPLACE(DBMS_UTILITY.FORMAT_ERROR_BACKTRACE, CHR(13), '' ''), CHR(10), '' ''); ',
'END VALIDATE; ',
'/* collect logs */',
'PROCEDURE COLLECTLOGS( PI_NAMES     IN T_TAB, ',
'                      PI_CODES      IN T_TAB, ',
'                      PI_STATUSES   IN T_TAB, ',
'                      PI_MSGES      IN T_TAB, ',
'                      PI_CONDITIONS IN T_TAB, ',
'                      PO_EXCEPTION OUT VARCHAR2, ',
'                      PO_JSON OUT VARCHAR2 ) ',
'IS ',
'  V_LOGS_JSON VARCHAR2(32000); ',
'BEGIN ',
'  IF PI_NAMES.COUNT > 0 THEN ',
'    FOR I IN PI_NAMES.FIRST..PI_NAMES.LAST ',
'    LOOP ',
'      V_LOGS_JSON := V_LOGS_JSON ',
'      ||''{         "validationCode": "'' ',
'      ||PI_CODES(I) ',
'      ||''",         "validationName": "'' ',
'      ||PI_NAMES(I) ',
'      ||''",         "validationMsg": "'' ',
'      ||PI_MSGES(I) ',
'      ||''",         "validationCondition": "'' ',
'      ||PI_CONDITIONS(I) ',
'      ||''",         "passed": '' ',
'      ||PI_STATUSES(I) ',
'      ||''       }''; ',
'      IF I <> PI_NAMES.LAST THEN ',
'        V_LOGS_JSON := V_LOGS_JSON ',
'        ||'',''; ',
'      END IF; ',
'    END LOOP; ',
'  END IF; ',
'  PO_JSON := V_LOGS_JSON; ',
'EXCEPTION ',
'WHEN OTHERS THEN ',
'  PO_EXCEPTION := SQLERRM; ',
'END COLLECTLOGS;FUNCTION GETFIELDSTOREVALIDATE( P_ITEM_NAME IN VARCHAR2 ) ',
'  RETURN VARCHAR2 ',
'IS ',
'  V_ITEMS_TO_VALIDATE VARCHAR2(3200); ',
'BEGIN ',
'SELECT',
'    LISTAGG(''#'' || ASSOCIATED_ITEM,',
'            '','') WITHIN GROUP(',
'        ORDER BY',
'            1',
'    )',
'INTO V_ITEMS_TO_VALIDATE',
'FROM',
'    (',
'        SELECT DISTINCT',
'            ASSOCIATED_ITEM',
'        FROM',
'            APEX_APPLICATION_PAGE_VAL AAPV',
'        WHERE',
'            APPLICATION_ID   = :APP_TRANSLATION_ID',
'            AND PAGE_ID          = :APP_TRANSLATION_PAGE_ID',
'            AND INSTR(',
'                '':'' ||',
'                CONDITION_EXPRESSION1 ||',
'                CONDITION_EXPRESSION2 ||',
'                VALIDATION_EXPRESSION1 ||',
'                VALIDATION_EXPRESSION2 ||',
'                '':'',',
'                P_ITEM_NAME',
'            ) > 0',
'            AND ASSOCIATED_ITEM <> P_ITEM_NAME',
'    );',
'   ',
'  RETURN V_ITEMS_TO_VALIDATE; ',
'END GETFIELDSTOREVALIDATE; ',
'/* get validation results */',
'FUNCTION VALIDATION_RESULT( P_TIME      IN NUMBER, ',
'                           P_ITEM       IN VARCHAR2, ',
'                           P_PASSED     IN VARCHAR2, ',
'                           P_MESSAGE    IN VARCHAR2, ',
'                           P_REVALIDATE IN VARCHAR2, ',
'                           P_LOGS       IN VARCHAR2 ) ',
'  RETURN VARCHAR2 ',
'IS ',
'  V_TIME_MASK VARCHAR2(24) := ''999G999G999G999G990D0000''; ',
'BEGIN ',
'  RETURN ''     {       "validation_result": {         "time": {           "ms": "'' ',
'  ||REPLACE(TO_CHAR(P_TIME, V_TIME_MASK),'' '', '''') ',
'  ||''",           "seconds": "'' ',
'  ||REPLACE(TO_CHAR((P_TIME/1000), V_TIME_MASK),'' '', '''') ',
'  ||''",           "minutes": "'' ',
'  ||REPLACE(TO_CHAR((P_TIME/1000/60), V_TIME_MASK),'' '', '''') ',
'  ||''"         },         "item": "'' ',
'  ||P_ITEM ',
'  ||''",         "passed": '' ',
'  ||P_PASSED ',
'  ||'',         "message": "'' ',
'  ||P_MESSAGE ',
'  ||''",         "revalidate": "'' ',
'  ||P_REVALIDATE ',
'  ||''",         "logs": ['' ',
'  ||P_LOGS ',
'  ||'']       }     }   ''; ',
'END; ',
'/* ajax call */',
'FUNCTION AJAX_VALIDATION ( P_DYNAMIC_ACTION IN APEX_PLUGIN.T_DYNAMIC_ACTION,',
'                          P_PLUGIN          IN APEX_PLUGIN.T_PLUGIN ) ',
'  RETURN APEX_PLUGIN.T_DYNAMIC_ACTION_AJAX_RESULT ',
'IS ',
'  V_VAL_NAMES T_TAB; ',
'  V_VAL_STATUSES T_TAB; ',
'  V_VAL_CODES T_TAB; ',
'  V_VAL_MSGES T_TAB; ',
'  V_VAL_CONDITIONS T_TAB; ',
'  V_REVALIDATE   NUMBER := NVL(P_DYNAMIC_ACTION.ATTRIBUTE_08, 0); ',
'  V_REVAL_FIELDS VARCHAR2(4000); ',
'  V_RESULT APEX_PLUGIN.T_DYNAMIC_ACTION_AJAX_RESULT; ',
'  V_ITEM_ID              VARCHAR2(100) := APEX_APPLICATION.G_X01; ',
'  V_VALIDATION_MSG       VARCHAR2(32000); ',
'  V_COND_OUT_MSG         VARCHAR2(3200); ',
'  V_COND_OUT_RUN         NUMBER; ',
'  V_VAL_OUT_MSG          VARCHAR2(3200); ',
'  V_VAL_OUT_STATUS       NUMBER; ',
'  V_LABEL                VARCHAR2(100); ',
'  V_LOGS_JSON            VARCHAR2(32000); ',
'  V_LOG_EXCEPTION        VARCHAR2(32000); ',
'  V_VAL_COUNT            NUMBER :=0; ',
'  E_VALIDATION_NOT_FOUND EXCEPTION; ',
'  V_VAL_ERROR_TEXT       VARCHAR2(32000); ',
'  V_ITEMSREVALIDATE      VARCHAR2(32000); ',
'  V_TIME_START           NUMBER; ',
'  V_TIME_END             NUMBER; ',
'  V_TIME_DIFF            NUMBER; ',
'BEGIN ',
'  V_TIME_START := CURRENT_TIME_MS(); ',
'  IF V_REVALIDATE = 1 THEN ',
'    V_REVAL_FIELDS := GETFIELDSTOREVALIDATE(V_ITEM_ID); ',
'  END IF; ',
'  BEGIN ',
'    SELECT LABEL ',
'    INTO   V_LABEL ',
'    FROM   APEX_APPLICATION_PAGE_ITEMS ',
'    WHERE  APPLICATION_ID = :APP_TRANSLATION_ID ',
'    AND    PAGE_ID = :APP_TRANSLATION_PAGE_ID ',
'    AND    ITEM_NAME = V_ITEM_ID; ',
'   ',
'  EXCEPTION ',
'  WHEN NO_DATA_FOUND THEN ',
'    V_LABEL := ''label not found''; ',
'  WHEN OTHERS THEN ',
'    V_LABEL := SQLERRM; ',
'  END; ',
'  FOR VALIDATION_ROW IN ',
'(',
'    SELECT',
'        *',
'    FROM',
'        (',
'            SELECT',
'                VALIDATION_TYPE_CODE,',
'                VALIDATION_NAME,',
'                VALIDATION_EXPRESSION1,',
'                VALIDATION_EXPRESSION2,',
'                VALIDATION_FAILURE_TEXT,',
'                VALIDATION_SEQUENCE,',
'                CONDITION_TYPE,',
'                CONDITION_TYPE_CODE,',
'                CONDITION_EXPRESSION1,',
'                CONDITION_EXPRESSION2',
'            FROM',
'                APEX_APPLICATION_PAGE_VAL AAPV',
'            WHERE',
'                AAPV.APPLICATION_ID    = :APP_TRANSLATION_ID',
'                AND AAPV.PAGE_ID           = :APP_TRANSLATION_PAGE_ID',
'                AND AAPV.ASSOCIATED_ITEM   = V_ITEM_ID',
'                AND ( AAPV.CONDITION_TYPE_CODE <> ''NEVER''',
'                      OR AAPV.CONDITION_TYPE_CODE IS NULL )',
'            UNION ALL',
'            SELECT',
'                DISPLAY_AS_CODE   VALIDATION_TYPE_CODE,',
'                DISPLAY_AS_CODE   VALIDATION_NAME,',
'                V_ITEM_ID         VALIDATION_EXPRESSION1,',
'                FORMAT_MASK       VALIDATION_EXPRESSION2,',
'                ''item buildin validation '' || DISPLAY_AS_CODE VALIDATION_FAILURE_TEXT,',
'                999999999999 VALIDATION_SEQUENCE,',
'                NULL CONDITION_TYPE,',
'                NULL CONDITION_TYPE_CODE,',
'                NULL CONDITION_EXPRESSION1,',
'                NULL CONDITION_EXPRESSION2',
'            FROM',
'                APEX_APPLICATION_PAGE_ITEMS',
'            WHERE',
'                APPLICATION_ID   = :APP_TRANSLATION_ID',
'                AND PAGE_ID          = :APP_TRANSLATION_PAGE_ID',
'                AND ITEM_NAME        = V_ITEM_ID',
'                AND DISPLAY_AS_CODE IN (',
'                    ''NATIVE_NUMBER_FIELD'',',
'                    ''NATIVE_DATE_PICKER''',
'                )',
'            UNION ALL',
'            SELECT',
'                ''ITEM_REQUIRED'',',
'                ''ITEM_REQUIRED'',',
'                V_ITEM_ID,',
'                FORMAT_MASK,',
'                ''item buildin validation ITEM_REQUIRED'',',
'                999999999999,',
'                NULL,',
'                NULL,',
'                NULL,',
'                NULL',
'            FROM',
'                APEX_APPLICATION_PAGE_ITEMS',
'            WHERE',
'                APPLICATION_ID       = :APP_TRANSLATION_ID',
'                AND PAGE_ID              = :APP_TRANSLATION_PAGE_ID',
'                AND ITEM_NAME            = V_ITEM_ID',
'                AND UPPER(IS_REQUIRED)   = ''YES''',
'        )',
'    ORDER BY',
'        VALIDATION_SEQUENCE ASC',
')',
'  LOOP ',
'    V_VAL_COUNT := V_VAL_COUNT +1; ',
'    ISRUNCONDITIONMATCHED( P_CONDITION_TYPE_CODE => VALIDATION_ROW.CONDITION_TYPE_CODE, ',
'                          P_CONDITION_EXPRESSION1 => VALIDATION_ROW.CONDITION_EXPRESSION1, ',
'                          P_CONDITION_EXPRESSION2 => VALIDATION_ROW.CONDITION_EXPRESSION2, ',
'                          P_OUT_RUN => V_COND_OUT_RUN, ',
'                          P_OUT_MSG => V_COND_OUT_MSG ); ',
'    IF V_COND_OUT_RUN IN (0, ',
'                          2) THEN ',
'      V_VAL_NAMES( V_VAL_NAMES.COUNT+1 ) := HTF.ESCAPE_SC( VALIDATION_ROW.VALIDATION_NAME ); ',
'      V_VAL_CODES( V_VAL_CODES.COUNT+1 ) := HTF.ESCAPE_SC( VALIDATION_ROW.VALIDATION_TYPE_CODE );',
'      V_VAL_CONDITIONS( V_VAL_CONDITIONS.COUNT+1 ) := HTF.ESCAPE_SC( V_COND_OUT_MSG ); ',
'      IF V_COND_OUT_RUN = 2 THEN ',
'        V_VAL_MSGES( V_VAL_MSGES.COUNT+1) := HTF.ESCAPE_SC( ''Error occured in validation.''); ',
'        V_VAL_STATUSES( V_VAL_STATUSES.COUNT+1 ) := ''"error"''; ',
'        V_VALIDATION_MSG := ''Error occured in validation.''; ',
'        RAISE E_VALIDATION_FAILED; ',
'      ELSE ',
'        V_VAL_STATUSES( V_VAL_STATUSES.COUNT+1 ) := ''null''; ',
'        V_VAL_MSGES( V_VAL_MSGES.COUNT+1) := HTF.ESCAPE_SC( ''null'' ); ',
'        CONTINUE; ',
'      END IF; ',
'    END IF; ',
'    VALIDATE( P_VALIDATION_TYPE => VALIDATION_ROW.VALIDATION_TYPE_CODE, ',
'             P_VALIDATION_NAME => VALIDATION_ROW.VALIDATION_NAME, ',
'             P_VALIDATION_EXPRESSION1 => VALIDATION_ROW.VALIDATION_EXPRESSION1, ',
'             P_VALIDATION_EXPRESSION2 => VALIDATION_ROW.VALIDATION_EXPRESSION2, ',
'             P_VALIDATION_ERROR_TEXT => VALIDATION_ROW.VALIDATION_FAILURE_TEXT, ',
'             P_OUT_ERROR_TEXT => V_VAL_ERROR_TEXT, ',
'             P_OUT_STATUS => V_VAL_OUT_STATUS, ',
'             P_OUT_MSG => V_VAL_OUT_MSG ); ',
'    V_VAL_MSGES( V_VAL_MSGES.COUNT+1) := HTF.ESCAPE_SC(V_VAL_OUT_MSG); ',
'    V_VAL_NAMES( V_VAL_NAMES.COUNT+1 ) := HTF.ESCAPE_SC(VALIDATION_ROW.VALIDATION_NAME); ',
'    V_VAL_CODES( V_VAL_CODES.COUNT+1 ) := HTF.ESCAPE_SC(VALIDATION_ROW.VALIDATION_TYPE_CODE); ',
'    V_VAL_CONDITIONS( V_VAL_CONDITIONS.COUNT+1 ) := HTF.ESCAPE_SC( V_COND_OUT_MSG ); ',
'    IF V_VAL_OUT_STATUS = 1 THEN ',
'      V_VAL_STATUSES( V_VAL_STATUSES.COUNT+1 ) := ''true''; ',
'      CONTINUE; ',
'    ELSIF V_VAL_OUT_STATUS = 0 THEN ',
'      V_VAL_STATUSES( V_VAL_STATUSES.COUNT+1 ) := ''false''; ',
'      V_VALIDATION_MSG := V_VAL_ERROR_TEXT; ',
'      RAISE E_VALIDATION_FAILED; ',
'    ELSE /* --2*/ ',
'      V_VAL_STATUSES( V_VAL_STATUSES.COUNT+1 ) := ''"error"''; ',
'      V_VALIDATION_MSG := ''Error occured while performin validation. Check Debug!''; ',
'      RAISE E_VALIDATION_FAILED; ',
'    END IF; ',
'  END LOOP; ',
'  IF V_VAL_COUNT = 0 THEN ',
'    RAISE E_VALIDATION_NOT_FOUND; ',
'  END IF; ',
'  COLLECTLOGS(V_VAL_NAMES, V_VAL_CODES, V_VAL_STATUSES, V_VAL_MSGES, V_VAL_CONDITIONS, V_LOG_EXCEPTION, V_LOGS_JSON);',
'  IF V_LOG_EXCEPTION IS NOT NULL THEN ',
'    HTP.P( V_LOG_EXCEPTION ); ',
'  END IF; ',
'  V_TIME_END := CURRENT_TIME_MS(); ',
'  V_TIME_DIFF := V_TIME_END - V_TIME_START; ',
'  HTP.P( VALIDATION_RESULT(V_TIME_DIFF, V_ITEM_ID, ''true'', ''Field is valid.'', V_REVAL_FIELDS, V_LOGS_JSON ) );',
'  RETURN V_RESULT; ',
'EXCEPTION ',
'WHEN E_VALIDATION_NOT_FOUND THEN ',
'  V_TIME_END := CURRENT_TIME_MS(); ',
'  V_TIME_DIFF := V_TIME_END - V_TIME_START; ',
'  HTP.P( VALIDATION_RESULT(V_TIME_DIFF, V_ITEM_ID, CHR(34) ',
'  ||''not_found'' ',
'  ||CHR(34), ''Validation for this field not found'', V_REVAL_FIELDS, ''[]'' ) ); ',
'  RETURN V_RESULT; ',
'WHEN E_VALIDATION_FAILED THEN ',
'  V_VALIDATION_MSG := HTF.ESCAPE_SC(V_VALIDATION_MSG); ',
'  V_VALIDATION_MSG := REPLACE(V_VALIDATION_MSG, CHR(35) ',
'  ||''LABEL'' ',
'  ||CHR(35), V_LABEL); ',
'  V_VALIDATION_MSG := REPLACE(V_VALIDATION_MSG, CHR(13) ',
'  ||CHR(10), ''\n''); ',
'  COLLECTLOGS(V_VAL_NAMES, V_VAL_CODES, V_VAL_STATUSES, V_VAL_MSGES, V_VAL_CONDITIONS, V_LOG_EXCEPTION, V_LOGS_JSON);',
'  V_TIME_END := CURRENT_TIME_MS(); ',
'  V_TIME_DIFF := V_TIME_END - V_TIME_START; ',
'  HTP.P( VALIDATION_RESULT(V_TIME_DIFF, V_ITEM_ID, ''false'', V_VALIDATION_MSG, V_REVAL_FIELDS, V_LOGS_JSON ) );',
'  RETURN V_RESULT; ',
'WHEN OTHERS THEN ',
'  HTP.P(''ajax_validation: '' ',
'  ||SQLERRM ); ',
'  RETURN V_RESULT; ',
'END AJAX_VALIDATION;'))
,p_api_version=>1
,p_render_function=>'RENDER_VALIDATION'
,p_ajax_function=>'AJAX_VALIDATION'
,p_substitute_attributes=>false
,p_subscribe_plugin_settings=>true
,p_help_text=>wwv_flow_string.join(wwv_flow_t_varchar2(
'This Plug-in is used to get Apex Validation live. You can use this plugin by define an apex validation and add this plugin as dynamic action on the item you want to validate. This dynamic action can be fired on "lose focus".',
'',
'Important:',
'',
'To use this plugin please add to text messages the following strings (KEY, value_example):',
'',
'- MUST_BE_NUMERIC => must be numeric',
'- REQUIRED => required',
'- DOES_NOT_MATCH_FORMAT => does not match format'))
,p_version_identifier=>'2.3'
,p_about_url=>'https://github.com/RonnyWeiss/apex-client-side-validation'
,p_files_version=>56
);
end;
/
begin
wwv_flow_api.g_varchar2_table := wwv_flow_api.empty_varchar2_table;
wwv_flow_api.g_varchar2_table(1) := '66756E6374696F6E206C6976655F76616C69646174696F6E2865297B66756E6374696F6E206128297B24282223222B73292E72656D6F7665436C6173732822617065782D706167652D6974656D2D6572726F7222292C6C2E6869646528292C6C2E656D70';
wwv_flow_api.g_varchar2_table(2) := '747928297D76617220723D2428652E74726967676572696E67456C656D656E74292C693D722E697328223A636865636B626F7822292C743D722E697328223A726164696F22292C6E3D722E697328226669656C6473657422292C733D6E756C6C2C6F3D6E';
wwv_flow_api.g_varchar2_table(3) := '756C6C2C6C3D6E756C6C2C643D6E756C6C2C703D6E756C6C3B7472797B6E3F28733D722E617474722822696422292C6F3D242E6D616B65417272617928722E66696E6428223A696E7075743A76697369626C653A636865636B656422292E6D6170286675';
wwv_flow_api.g_varchar2_table(4) := '6E6374696F6E28297B72657475726E20746869732E76616C75657D29292E6A6F696E28223A2229293A697C7C743F28733D722E706172656E747328226669656C6473657422292E666972737428292E617474722822696422292C6F3D242E6D616B654172';
wwv_flow_api.g_varchar2_table(5) := '72617928722E706172656E747328226669656C6473657422292E666972737428292E66696E6428223A696E7075743A76697369626C653A636865636B656422292E6D61702866756E6374696F6E28297B72657475726E20746869732E76616C75657D2929';
wwv_flow_api.g_varchar2_table(6) := '2E6A6F696E28223A2229293A28733D722E617474722822696422292C6F3D722E76616C2829292C6C3D24282223222B732B225F6572726F725F706C616365686F6C64657222292C6128292C6C2E656D70747928292C28643D2428223C7370616E3E3C2F73';
wwv_flow_api.g_varchar2_table(7) := '70616E3E2229292E616464436C6173732822666122292C642E616464436C617373282266612D7265667265736822292C642E616464436C617373282266612D616E696D2D7370696E22292C642E6869646528292C6C2E617070656E642864292C6C2E7368';
wwv_flow_api.g_varchar2_table(8) := '6F7728292C6C2E72656D6F7665436C6173732822752D68696464656E22292C642E73686F7728226661737422297D63617463682865297B636F6E736F6C652E6572726F722865297D7472797B242E616A6178287B75726C3A227777765F666C6F772E7368';
wwv_flow_api.g_varchar2_table(9) := '6F77222C747970653A22706F7374222C64617461547970653A226A736F6E222C747261646974696F6E616C3A21302C646174613A7B705F726571756573743A224E41544956453D222B652E616374696F6E2E616A61784964656E7469666965722C705F66';
wwv_flow_api.g_varchar2_table(10) := '6C6F775F69643A2476282270466C6F77496422292C705F666C6F775F737465705F69643A2476282270466C6F7753746570496422292C705F696E7374616E63653A2476282270496E7374616E636522292C705F6172675F6E616D65733A5B735D2C705F61';
wwv_flow_api.g_varchar2_table(11) := '72675F76616C7565733A5B6F5D2C7830313A737D2C737563636573733A66756E6374696F6E28652C722C69297B696628642E68696465282266617374222C66756E6374696F6E28297B642E72656D6F766528297D292C617065782E64656275672865292C';
wwv_flow_api.g_varchar2_table(12) := '313D3D652E76616C69646174696F6E5F726573756C742E706173736564296128293B656C73657B696628226E6F745F666F756E64223D3D652E76616C69646174696F6E5F726573756C742E7061737365642972657475726E20766F696420617065782E64';
wwv_flow_api.g_varchar2_table(13) := '6562756728226C6976652076616C69646174696F6E3A206E6F2076616C69646174696F6E20666F756E6420666F72206974656D203D20222B732B222E22293B76617220743D652E76616C69646174696F6E5F726573756C742E6D6573736167653B216675';
wwv_flow_api.g_varchar2_table(14) := '6E6374696F6E2865297B636F6E736F6C652E6C6F672865292C6C2E656D70747928292C28703D2428223C7370616E3E3C2F7370616E3E2229292E616464436C6173732822742D466F726D2D6572726F7222292C702E68746D6C2865292C702E6869646528';
wwv_flow_api.g_varchar2_table(15) := '292C6C2E617070656E642870292C24282223222B73292E616464436C6173732822617065782D706167652D6974656D2D6572726F7222292C6C2E73686F7728292C702E73686F7728297D28743D742E7265706C616365282F266C743B2F672C223C22292E';
wwv_flow_api.g_varchar2_table(16) := '7265706C616365282F2667743B2F672C223E2229297D7D2C6572726F723A66756E6374696F6E28652C612C72297B636F6E736F6C652E6572726F7228224572726F72206F636375726564207768696C652072657472696576696E6720414A415820646174';
wwv_flow_api.g_varchar2_table(17) := '613A20222B612B225C6E222B72297D7D297D63617463682865297B636F6E736F6C652E6572726F722865297D7D';
null;
end;
/
begin
wwv_flow_api.create_plugin_file(
 p_id=>wwv_flow_api.id(8209355748265986866)
,p_plugin_id=>wwv_flow_api.id(8359693052210337079)
,p_file_name=>'live_validation.min.js'
,p_mime_type=>'application/javascript'
,p_file_charset=>'utf-8'
,p_file_content=>wwv_flow_api.varchar2_to_blob(wwv_flow_api.g_varchar2_table)
);
end;
/
begin
wwv_flow_api.import_end(p_auto_install_sup_obj => nvl(wwv_flow_application_install.get_auto_install_sup_obj, false), p_is_component_import => true);
commit;
end;
/
set verify on feedback on define on
prompt  ...done
